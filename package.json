{
  "name": "tsdoc-gen",
  "displayName": "tsdoc-gen",
  "description": "Generate TSDoc comments for TypeScript code",
  "version": "1.0.0",
  "publisher": "vicius",
  "icon": "./media/tsdoc-logo.webp",
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:typescript"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "tsdoc-gen.generateTSDoc",
        "title": "Generate TSDoc block"
      }
    ],
    "keybindings": [
      {
        "command": "tsdoc-gen.generateTSDoc",
        "key": "ctrl+alt+d",
        "when": "editorTextFocus && editorLangId == typescript"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "tsdoc-gen.generateTSDoc",
          "when": "editorLangId == typescript"
        }
      ],
      "editor/title": [
        {
          "command": "tsdoc-gen.generateTSDoc",
          "when": "editorLangId == typescript",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "TSDoc Generator",
      "properties": {
        "tsdocGen.triggerKeyword": {
          "type": "string",
          "default": "/*!",
          "description": "Trigger keyword that auto-inserts a TSDoc block when typed on its own line."
        },
        "tsdocGen.includeReturnsForVoid": {
          "type": "boolean",
          "default": false,
          "description": "Include @returns even for functions returning void/undefined"
        },
        "tsdocGen.includeEmptyParamBlock": {
          "type": "boolean",
          "default": false,
          "description": "Include @param block even when function/class has no parameters"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test:unit": "vitest run",
    "test:watch": "vitest watch",
    "coverage": "c8 vitest run",
    "test:e2e": "npm run vscode:test",
    "test": "npm run test:unit",
    "test:ci": "npm run test:unit && npm run test:e2e",
    "dev": "tsc -w",
    "build": "tsc",
    "vscode:test": "vscode-test",
    "build:promote": "tsc",
    "postinstall": "npm run build",
    "promote": "npm run build:promote && node dist/scripts/promote.js"
  },
  "devDependencies": {
    "@tsconfig/node20": "^20.1.5",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.17.55",
    "@types/vscode": "^1.100.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "c8": "^10.1.3",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "vitest": "^0.34.0"
  },
  "dependencies": {
    "ts-morph": "^26.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/apopovicius/tsdoc-gen.git"
  },
  "license": "MIT"
}
